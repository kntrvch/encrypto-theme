// Styling for the map section

// Special thanks to Dylan Vann (https://dylanvann.com/custom-animated-google-maps-markers/)
// Thanks to: https://www.antimath.info/css/sass-sqrt-function/
// Using sqrt to get the size of the map pin. You could do this manually,
// if your pin is a different shape.
@function sqrt($r) {
  $x0: 1;
  $x1: $x0;
  @for $i from 1 through 10 {
      $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
      $x0: $x1;
  }
  @return $x1;
}
$pinWidth: 80px;
$pinHeightFactor: ((1 + sqrt(2))/2);
$pinHeight: $pinHeightFactor * $pinWidth;
$pinColor: $primary;
$shadowOpacity: .5;
$shadow-size: 40px;

#map {
  height: 400px;
  margin: 0;

  .pin-wrap {
    position: absolute;
    width: $pinWidth;
    height: $pinWidth;
    margin-top: -$pinHeight;
    margin-left: -$pinWidth/2;
    transform-origin: 50% ($pinHeightFactor * 100%) 0;
  }
  .pin {
    position: absolute;
    top: 50%;
    left: 50%;
    width: $pinWidth;
    height: $pinWidth;
    margin-top: -$pinWidth/2;
    margin-left: -$pinWidth/2;
    transform-origin: 50% ($pinHeightFactor * 100%) 0;
  }
  .pin::after {
    position: absolute;
    display: block;
    box-sizing: border-box;
    width: $pinWidth;
    height: $pinWidth;
    content: '';
    transform: rotateZ(-45deg);
    border: 16px solid $pinColor;
    border-radius: 50% 50% 50% 50%;
  }
  .pin::before {
    position: absolute;
    display: block;
    box-sizing: border-box;
    width: $pinWidth;
    height: $pinWidth;
    content: '';
    transform: rotateZ(-45deg);
    border: 12px solid darken($pinColor, 10%);
    border-radius: 50% 50% 50% 0;
  }
  .shadow {
    position: absolute;
  }
  .shadow::after {
    position: absolute;
    left: -100px - $shadow-size/2;
    display: block;
    width: $shadow-size;
    height: $shadow-size;
    margin-top: -$shadow-size/2;
    content: '';
    transform: rotateX(55deg);
    border-radius: 50%;
    box-shadow: rgba(0, 0, 0, $shadowOpacity) 100px 0 20px;
  }
}